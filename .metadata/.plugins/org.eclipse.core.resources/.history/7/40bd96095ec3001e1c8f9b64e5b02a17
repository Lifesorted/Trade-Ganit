/**
 * 
 */
package com.majesco.test.dm.tasks.ui.dm;

import static com.majesco.test.dm.page_objects.ProducerAgencyAffiliationPage.PRIMARY_LOB;
import static net.serenitybdd.screenplay.matchers.WebElementStateMatchers.isVisible;

import java.util.logging.Logger;

import com.majesco.test.dm.page_objects.HierarchyDetailPage;
import com.majesco.test.dm.page_objects.OtherInfoPage;
import com.majesco.test.dm.utils.DataHelper;
import com.majesco.test.dm.utils.Key;

import net.serenitybdd.core.steps.UIInteractions;
import net.serenitybdd.screenplay.Actor;
import net.serenitybdd.screenplay.Task;
import net.serenitybdd.screenplay.actions.Click;
import net.serenitybdd.screenplay.actions.Scroll;
import net.serenitybdd.screenplay.ensure.Ensure;
import net.serenitybdd.screenplay.ensure.web.ElementLocated;
import net.serenitybdd.screenplay.waits.WaitUntil;

/**
 * @author Shaile908568
 *
 */
public class VerifyOtherinfoDetails extends UIInteractions implements Task {

	private static Logger logger = Logger.getLogger(DataHelper.class.getName());
	private static String rolelevel;
	private static String roleedate;
	private static String contractedate;

	public VerifyOtherinfoDetails(String rolelevel, String roleedate, String contractedate) {
		this.rolelevel = rolelevel;
		this.roleedate = roleedate;
		this.contractedate = contractedate;
	}

	public static VerifyOtherinfoDetails fromUnderlineDetails() {
		rolelevel = DataHelper.getRecord("Hierarchy_Details", 1, 3);
		roleedate = DataHelper.getRecord("Hierarchy_Details", 1, 7);
		contractedate = DataHelper.getRecord("Hierarchy_Details", 1, 8);

		return new VerifyOtherinfoDetails(rolelevel, roleedate, contractedate);
	}

	@Override
	public <T extends Actor> void performAs(T actor) {

		waitABit(2000);
		//String expectedrolelevel = OtherInfoPage.ROLE_LEVEL.resolveFor(actor).getAttribute("title");
		//System.out.println("inselect" + expectedrolelevel);
		//actor.attemptsTo(WaitUntil.the(OtherInfoPage.ROLE_LEVEL, isVisible()));
		//Ensure.that(expectedrolelevel).isLessThan(rolelevel);
		//waitABit(999);
		
		//Validate Is Core IMO
		actor.attemptsTo(WaitUntil.the(OtherInfoPage.IS_CORE_IMO_LABEL, isVisible()));
		Ensure.that(OtherInfoPage.IS_CORE_IMO_LABEL).text().isEqualTo("Is Core IMO");
		Ensure.that(OtherInfoPage.IS_CORE_IMO_DISABLE).attribute("disabled").isEqualTo("disabled");
		Ensure.that(OtherInfoPage.IS_CORE_IMO_DEFAULT_OPTION).hasSelectedValue("No");
		waitABit(999);
		
		//Validate Contract effective Date
		Ensure.that(OtherInfoPage.CE_DATE).text().isEqualTo(DataHelper.getRecord("Appointment_Details", 1, 0));

		waitABit(999);
		String exbrokernum = OtherInfoPage.BROKER_NUM.resolveFor(actor).getText();
		//System.out.println("inselect" + expectedrolelevel);
		actor.attemptsTo(WaitUntil.the(OtherInfoPage.BROKER_NUM, isVisible()));
		Ensure.that(exbrokernum).isNotBlank();
		waitABit(999);

		actor.attemptsTo(WaitUntil.the(OtherInfoPage.PRIM_LOB_LABEL, isVisible())
				.then(Ensure.that(OtherInfoPage.PRIM_LOB_LABEL).hasTextContent("Primary LOB")));
		waitABit(999);

		actor.attemptsTo(WaitUntil.the(OtherInfoPage.PRIMARY_LOB, isVisible()).then(
				Ensure.that(ElementLocated.by(OtherInfoPage.PRIMARY_LOB)).textValues().contains("Annuities", "Life")));
		waitABit(3000);

		actor.attemptsTo(Scroll.to(OtherInfoPage.SAVE_BTN).andAlignToBottom());
		waitABit(999);
		
		String selectedLob = OtherInfoPage.SELECTED_LOB.resolveFor(actor).getAttribute("title");

		waitABit(999);
		if (selectedLob.equalsIgnoreCase("Select")) {
			actor.attemptsTo(Click.on(OtherInfoPage.EDIT_LOB));
			waitABit(1400);
			actor.attemptsTo(WaitUntil.the(OtherInfoPage.ADD_LOB, isVisible()));
			actor.attemptsTo(WaitUntil.the(OtherInfoPage.DELETE_LOB, isVisible()));
			actor.attemptsTo(WaitUntil.the(OtherInfoPage.SAVE_LOB, isVisible()));
			actor.attemptsTo(WaitUntil.the(OtherInfoPage.CANCEL_LOB, isVisible()));
			actor.attemptsTo(WaitUntil.the(OtherInfoPage.CLOSE_LOB, isVisible()));
		} else {
			Ensure.that(selectedLob).equals(actor.recall(Key.SELECTED_LOB));
			actor.attemptsTo(Click.on(OtherInfoPage.VIEW_LOB));
			waitABit(1400);
			actor.attemptsTo(WaitUntil.the(OtherInfoPage.CLOSE_LOB, isVisible())
					.then(Click.on(OtherInfoPage.CLOSE_LOB)));
			waitABit(999);
		}
	}

}
