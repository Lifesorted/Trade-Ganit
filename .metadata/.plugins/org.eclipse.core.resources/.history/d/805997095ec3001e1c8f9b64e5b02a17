/**
 * 
 */
package com.majesco.test.dm.tasks.ui.dm;

import java.util.logging.Logger;

import com.majesco.test.dm.page_objects.LicenseDetailPage;
import com.majesco.test.dm.tasks.ui.common.NavigateTo;
import com.majesco.test.dm.utils.DataHelper;

import net.serenitybdd.core.steps.UIInteractions;
import net.serenitybdd.screenplay.Actor;
import net.serenitybdd.screenplay.Task;
import net.serenitybdd.screenplay.ensure.Ensure;
import net.serenitybdd.screenplay.questions.Text;
import net.serenitybdd.screenplay.waits.WaitUntil;

/**
 * @author Shaile908568
 *
 */
public class VerifyLicenseDetails extends UIInteractions implements Task {

	private static Logger logger = Logger.getLogger(DataHelper.class.getName());
	private static String licenseno;
	private static String type;
	private static String state;
	private static String resident;
	private static String licensestatus;
	private static String loa;
	private static String loastatus;

	public VerifyLicenseDetails(String licenseno, String type, String state, String resident, String licensestatus,
			String loa, String loastatus) {
		this.licenseno = licenseno;
		this.type = type;
		this.state = state;
		this.resident = resident;
		this.licensestatus = licensestatus;
		this.loa = loa;
		this.loastatus = loastatus;
	}

	public static VerifyLicenseDetails fromUnderlineDetails() {
		licenseno = DataHelper.getRecord("License_Details", 1, 0);
		type = DataHelper.getRecord("License_Details", 1, 1);
		state = DataHelper.getRecord("License_Details", 1, 2);
		resident = DataHelper.getRecord("License_Details", 1, 3);
		licensestatus = DataHelper.getRecord("License_Details", 1, 4);
		loa = DataHelper.getRecord("License_Details", 1, 5);
		loastatus = DataHelper.getRecord("License_Details", 1, 6);

		return new VerifyLicenseDetails(licenseno, type, state, resident, licensestatus, loa, loastatus);
	}

	@Override
	public <T extends Actor> void performAs(T actor) {

		String flag = LicenseDetailPage.BLANK_LICENSE.resolveFor(actor).getAttribute("data-rowid");

		if (flag == "") {
			NavigateTo.bankTab();
		} /*
			 * else {
			 * actor.attemptsTo(WaitUntil.the(LicenseDetailPage.LICENSE_NO,isVisible())
			 * .then(Ensure.that(actor.asksFor(Text.of(LicenseDetailPage.LICENSE_NO))).
			 * isEqualTo(licenseno))); waitABit(999);
			 * 
			 * actor.attemptsTo(WaitUntil.the(LicenseDetailPage.TYPE, isVisible())
			 * .then(Ensure.that(actor.asksFor(Text.of(LicenseDetailPage.TYPE))).isEqualTo(
			 * type))); waitABit(999); }
			 */
			 

	}

}
