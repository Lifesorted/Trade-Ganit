/**
 * 
 */
package com.majesco.test.dm.tasks.ui.dm;

import static com.majesco.test.dm.page_objects.ProducerContactInfoPage.RES_STATE;
import static com.majesco.test.dm.page_objects.ProducerContactInfoPage.SAVE_ADDRESS;
import static net.serenitybdd.screenplay.matchers.WebElementStateMatchers.*;
import java.util.logging.Logger;
import com.majesco.test.dm.page_objects.BankDetailPage;
import com.majesco.test.dm.utils.CommonUtil;
import com.majesco.test.dm.utils.DataHelper;
import net.serenitybdd.core.steps.UIInteractions;
import net.serenitybdd.screenplay.Actor;
import net.serenitybdd.screenplay.Task;
import net.serenitybdd.screenplay.actions.Click;
import net.serenitybdd.screenplay.actions.Enter;
import net.serenitybdd.screenplay.actions.Scroll;
import net.serenitybdd.screenplay.actions.SelectFromOptions;
import net.serenitybdd.screenplay.ensure.Ensure;
import net.serenitybdd.screenplay.questions.Text;
import net.serenitybdd.screenplay.waits.WaitUntil;

/**
 * @author Shaile908568
 *
 */
public class AddBankInfo extends UIInteractions implements Task {

	private static Logger logger = Logger.getLogger(DataHelper.class.getName());
	BankDetailPage bankDetailPage;
	private static String accountno;
	private static String type;
	private static String financialinstitution;
	private static String accname;
	private static String routingno;

	public AddBankInfo(String accountno, String type, String financialinstitution, String accname, String routingno) {
		this.accountno = accountno;
		this.type = type;
		this.financialinstitution = financialinstitution;
		this.accname = accname;
		this.routingno = routingno;
	}

	public static AddBankInfo fromUnderlineDetails() {
		accountno = DataHelper.getRecord("Bank_Details", 1, 0);
		type = DataHelper.getRecord("Bank_Details", 1, 1);
		financialinstitution = DataHelper.getRecord("Bank_Details", 1, 2);
		accname = DataHelper.getRecord("Bank_Details", 1, 3);
		routingno = DataHelper.getRecord("Bank_Details", 1, 4);
		return new AddBankInfo(accountno, type, financialinstitution, accname, routingno);
	}

	@Override
	public <T extends Actor> void performAs(T actor) {
		
		waitABit(3000);
		actor.attemptsTo(Scroll.to(bankDetailPage.SAVE_BANK_ACCOUNT).andAlignToTop());
		
		waitABit(999);
		actor.attemptsTo(Click.on(bankDetailPage.ADD_BANK_ACCOUNT));
		
		waitABit(999);
		
		actor.attemptsTo(Click.on(bankDetailPage.SAVE_BANK_ACCOUNT));
		
		waitABit(999);
		
		String Allmessage = bankDetailPage.VALIDATION_MESSAGE.resolveFor(actor).getText();
		
		System.out.println(Allmessage);
				
		actor.attemptsTo(WaitUntil.the(bankDetailPage.OK_BTN, isClickable())
				.then(Ensure.that(actor.asksFor(Text.of(bankDetailPage.VALIDATION_MESSAGE))).isEqualTo(Allmessage)));
		waitABit(2000);
		
		actor.attemptsTo(Click.on(bankDetailPage.OK_BTN));
		
		waitABit(2000);
		actor.attemptsTo(WaitUntil.the(bankDetailPage.ACCOUNT_NUM_INPUT, isClickable())
				.then(Enter.theValue(CommonUtil.generateNineDigitNumber()).into(bankDetailPage.ACCOUNT_NUM_INPUT))
				);
		waitABit(999);
		
		actor.attemptsTo(WaitUntil.the(bankDetailPage.TYPE_SELECT, isClickable())
				.then(SelectFromOptions.byVisibleText("Savings").from(bankDetailPage.TYPE_SELECT))
				);
		waitABit(999);
		
		actor.attemptsTo(WaitUntil.the(bankDetailPage.FINANCIAL_INSTITUTION, isClickable())
				.then(SelectFromOptions.byVisibleText("Not Applicable").from(bankDetailPage.FINANCIAL_INSTITUTION))
				);
		waitABit(999);
		
		actor.attemptsTo(WaitUntil.the(bankDetailPage.ACCOUNT_HOLDER_NAME, isClickable())
				.then(Enter.theValue("Josh Taylor").into(bankDetailPage.ACCOUNT_HOLDER_NAME))
				);
		waitABit(999);
		
		actor.attemptsTo(WaitUntil.the(bankDetailPage.ROUTING_NUM, isClickable())
				.then(Enter.theValue("325081623").into(bankDetailPage.ROUTING_NUM))
				);
		waitABit(999);
		
		actor.attemptsTo(Click.on(bankDetailPage.SAVE_BANK_ACCOUNT));
		
		waitABit(999);
		actor.attemptsTo(WaitUntil.the(bankDetailPage.OK_BTN, isClickable())
				.then(Click.on(bankDetailPage.OK_BTN))
				);
		waitABit(999);
		
	}

}
