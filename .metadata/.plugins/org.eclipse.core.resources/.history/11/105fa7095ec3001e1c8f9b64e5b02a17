/**
 * 
 */
package com.majesco.test.dm.tasks.ui.dm;

import static net.serenitybdd.screenplay.matchers.WebElementStateMatchers.isVisible;

import java.util.logging.Logger;

import com.majesco.test.dm.page_objects.BankDetailPage;
import com.majesco.test.dm.utils.DataHelper;

import net.serenitybdd.core.steps.UIInteractions;
import net.serenitybdd.screenplay.Actor;
import net.serenitybdd.screenplay.Task;
import net.serenitybdd.screenplay.ensure.Ensure;
import net.serenitybdd.screenplay.waits.WaitUntil;

/**
 * @author Shaile908568
 *
 */
public class VerifyBankDetails extends UIInteractions implements Task{

	private static Logger logger = Logger.getLogger(DataHelper.class.getName());
	BankDetailPage bankDetailPage;
	private static String accountno;
	private static String type;
	private static String financialinstitution;
	private static String accname;
	private static String routingno;
		
	public VerifyBankDetails(String accountno, String type, String financialinstitution, String accname, String routingno) {
		this.accountno = accountno;
		this.type = type;
		this.financialinstitution = financialinstitution;
		this.accname = accname;
		this.routingno = routingno;
	}
	
	public static VerifyBankDetails fromUnderlineDetails() {
		accountno = DataHelper.getRecord("Bank_Details", 1, 0);
		type = DataHelper.getRecord("Bank_Details", 1, 1);
		financialinstitution = DataHelper.getRecord("Bank_Details", 1, 2);
		accname = DataHelper.getRecord("Bank_Details", 1, 3);
		routingno = DataHelper.getRecord("Bank_Details", 1, 4);
		
		return new VerifyBankDetails(accountno, type, financialinstitution, accname, routingno);
	}
	
	@Override
	public <T extends Actor> void performAs(T actor) {
	
		waitABit(2000);
		String expectedAccountno = BankDetailPage.ACCOUNT_NO.resolveFor(actor).getAttribute("title");
		actor.attemptsTo(WaitUntil.the(BankDetailPage.ACCOUNT_NO, isVisible()));
				Ensure.that(expectedAccountno).isNotBlank();
		waitABit(999);
		
		String accountType = BankDetailPage.TYPE.resolveFor(actor).getAttribute("title");
		actor.attemptsTo(WaitUntil.the(BankDetailPage.TYPE, isVisible()));
				Ensure.that(accountType).isEqualTo(type);
		waitABit(999);
		
		String finInstitute = BankDetailPage.FINANCIAL_INS.resolveFor(actor).getAttribute("title");
		actor.attemptsTo(WaitUntil.the(BankDetailPage.TYPE, isVisible()));
				Ensure.that(finInstitute).isEqualTo(financialinstitution);
		waitABit(999);
		
		String accountName = BankDetailPage.FINANCIAL_INS.resolveFor(actor).getAttribute("title");
		actor.attemptsTo(WaitUntil.the(BankDetailPage.TYPE, isVisible()));
				Ensure.that(accountName).isEqualTo(accname);
		waitABit(999);
		
		String routingNo = BankDetailPage.ROUTING_NO.resolveFor(actor).getAttribute("title");
		actor.attemptsTo(WaitUntil.the(BankDetailPage.TYPE, isVisible()));
				Ensure.that(routingNo).isEqualTo(routingno);
		waitABit(999);
		
	}

}
